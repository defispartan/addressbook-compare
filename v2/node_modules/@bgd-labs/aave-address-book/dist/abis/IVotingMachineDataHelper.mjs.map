{"version":3,"sources":["../../src/ts/abis/IVotingMachineDataHelper.ts"],"sourcesContent":["// AUTOGENERATED - MANUALLY CHANGES WILL BE REVERTED BY THE GENERATOR\nexport const IVotingMachineDataHelper_ABI = [\n  {\n    inputs: [\n      {\n        internalType: 'contract IVotingMachineWithProofs',\n        name: 'votingMachine',\n        type: 'address',\n        components: [],\n      },\n      {\n        internalType: 'struct IVotingMachineDataHelper.InitialProposal[]',\n        name: 'initialProposals',\n        type: 'tuple[]',\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'id',\n            type: 'uint256',\n            components: [],\n          },\n          {\n            internalType: 'bytes32',\n            name: 'snapshotBlockHash',\n            type: 'bytes32',\n            components: [],\n          },\n        ],\n      },\n      {\n        internalType: 'address',\n        name: 'user',\n        type: 'address',\n        components: [],\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    name: 'getProposalsData',\n    outputs: [\n      {\n        internalType: 'struct IVotingMachineDataHelper.Proposal[]',\n        name: '',\n        type: 'tuple[]',\n        components: [\n          {\n            internalType: 'struct IVotingMachineWithProofs.ProposalWithoutVotes',\n            name: 'proposalData',\n            type: 'tuple',\n            components: [\n              {\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n                components: [],\n              },\n              {\n                internalType: 'bool',\n                name: 'sentToGovernance',\n                type: 'bool',\n                components: [],\n              },\n              {\n                internalType: 'uint40',\n                name: 'startTime',\n                type: 'uint40',\n                components: [],\n              },\n              {\n                internalType: 'uint40',\n                name: 'endTime',\n                type: 'uint40',\n                components: [],\n              },\n              {\n                internalType: 'uint40',\n                name: 'votingClosedAndSentTimestamp',\n                type: 'uint40',\n                components: [],\n              },\n              {\n                internalType: 'uint128',\n                name: 'forVotes',\n                type: 'uint128',\n                components: [],\n              },\n              {\n                internalType: 'uint128',\n                name: 'againstVotes',\n                type: 'uint128',\n                components: [],\n              },\n              {\n                internalType: 'uint256',\n                name: 'creationBlockNumber',\n                type: 'uint256',\n                components: [],\n              },\n              {\n                internalType: 'uint256',\n                name: 'votingClosedAndSentBlockNumber',\n                type: 'uint256',\n                components: [],\n              },\n            ],\n          },\n          {\n            internalType: 'struct IVotingMachineDataHelper.VotedInfo',\n            name: 'votedInfo',\n            type: 'tuple',\n            components: [\n              {\n                internalType: 'bool',\n                name: 'support',\n                type: 'bool',\n                components: [],\n              },\n              {\n                internalType: 'uint248',\n                name: 'votingPower',\n                type: 'uint248',\n                components: [],\n              },\n            ],\n          },\n          {\n            internalType: 'contract IVotingStrategy',\n            name: 'strategy',\n            type: 'address',\n            components: [],\n          },\n          {\n            internalType: 'contract IDataWarehouse',\n            name: 'dataWarehouse',\n            type: 'address',\n            components: [],\n          },\n          {\n            internalType: 'address[]',\n            name: 'votingAssets',\n            type: 'address[]',\n            components: [],\n          },\n          {\n            internalType: 'bool',\n            name: 'hasRequiredRoots',\n            type: 'bool',\n            components: [],\n          },\n          {\n            internalType: 'struct IVotingMachineWithProofs.ProposalVoteConfiguration',\n            name: 'voteConfig',\n            type: 'tuple',\n            components: [\n              {\n                internalType: 'uint24',\n                name: 'votingDuration',\n                type: 'uint24',\n                components: [],\n              },\n              {\n                internalType: 'bytes32',\n                name: 'l1ProposalBlockHash',\n                type: 'bytes32',\n                components: [],\n              },\n            ],\n          },\n          {\n            internalType: 'enum IVotingMachineWithProofs.ProposalState',\n            name: 'state',\n            type: 'uint8',\n            components: [],\n          },\n        ],\n      },\n    ],\n  },\n] as const;\n"],"mappings":"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","names":[]}